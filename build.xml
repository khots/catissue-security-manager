<?xml version ="1.0"?>

<!--L
   Copyright Washington University in St. Louis
   Copyright SemanticBits
   Copyright Persistent Systems
   Copyright Krishagni

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/catissue-security-manager/LICENSE.txt for details.
L-->

<!--Ant Script for create Build for SecurityManager-->
<project name="SecurityManager" default="compile">
	<property file="sm.properties"/>
	<property name="base.dir" value="." />
	<property name="lib.dir" value="${base.dir}/lib" />
	<property name="build.dir" value="${base.dir}/build" />
	<property name="src.dir" value="${base.dir}/src" />
	<property name="target.dir" value="${base.dir}/classes" />
	<property name="generateforce" value="true" />
	<property name="junit.dir" value="${base.dir}/junit" />
	<property name="junit.report.dir" value="${junit.dir}/reports" />
	<property name="junit.classes.dir" value="${junit.dir}/classes" />
	<property name="code.coverage.report.dir" value="${junit.dir}/coverage-reports" />
	<property name="instrumented.classes.dir" value="${junit.dir}/instrumented-classes" />
	<property name="cobertura.home" value="${base.dir}/cobertura"/>
	<property name="cobertura.lib" value="${cobertura.home}/lib"/>
	<property name="test.dir" value="${base.dir}/test" />
	<property name="test.src.dir" value="SecurityManager_dbunit/src" />
	<path id="junit.classpath">		
		<pathelement location="lib/cobertura.jar" />
		<pathelement location="lib/jakarta-oro-2.0.8.jar" />
		<pathelement location="lib/asm-2.2.1.jar" />
		<pathelement location="lib/log4j-1.2.9.jar" />
	</path>

	<!--loadfile property="dist.revision" srcFile="./svn/entries">  
			<filterchain>  
				<headfilter lines="1" skip="4"/>
			</filterchain>  
	</loadfile-->
	
	<target name="compile" depends="init">
		<javac destdir="${target.dir}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.8">
			<src path="${src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
		<copy todir="${target.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
			</fileset>
		</copy>
	</target>
	<!-- sub tasks -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<delete dir="${target.dir}" />
		<mkdir dir="${target.dir}" />
		<mkdir dir="${build.dir}" />
		<delete dir="${junit.dir}" failonerror="false"/>
		<mkdir dir="${junit.dir}" />
		<delete dir="${junit.classes.dir}" failonerror="false"/>
		<mkdir dir="${junit.classes.dir}" />
	</target>
	<target name="build_jar" depends="compile">
		<delete>
			<fileset dir="${build.dir}" includes="**/*" />
		</delete>
		<tstamp />
		<jar taskname="build_jar" jarfile="${build.dir}/securityManager-${sm.jar.version}.jar">
			<fileset dir="${target.dir}">
				<include name="**/*" />
			</fileset>
			<manifest>
			   	<section name="${sm.jar.details}">
			   	   <attribute name="Version" value="${sm.jar.version}"/>
			   	   <attribute name="Built-By" value="${sm.jar.creator}" />   	   			   	   					
				   <attribute name="Build-on" value="${TODAY} ${TSTAMP}" />
			   	   <attribute name="SVN-URL" value="${dist.revision}" />
				</section>   	   					
			</manifest>
		</jar>

		<antcall target="build_code_zip" />
	</target>
	<target name="build_code_zip" depends="compile">
		<zip destfile="${build.dir}/securityManager-${sm.jar.version}-src.zip">
			<fileset dir="${src.dir}" includes="**/*" />
		</zip>
	</target>
	<target name="Generate_Report_Cobertura" depends="compile">			 
	 	<antcall target="instrument" />
		<antcall target="runJunit" />
		<cobertura-report srcdir="${src.dir}" destdir="${code.coverage.report.dir}" />
		<delete file="${instrumented.classes.dir}/cobertura.ser" />
	</target>	
	<target name="instrument">
		<mkdir dir="${code.coverage.report.dir}" />
		<mkdir dir="${instrumented.classes.dir}" />
		<cobertura-instrument todir="${instrumented.classes.dir}">	
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${target.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
				<exclude name="**/Mock*.class" />
			</fileset>				
		</cobertura-instrument>
	</target>
	<taskdef classpathref="junit.classpath" resource="tasks.properties" />
	<target name="runJunit" depends="db_compile">
		<mkdir dir="${junit.report.dir}" />		
		<delete>
			<fileset dir="${junit.report.dir}" includes="**/*" />
		</delete>
		<mkdir dir="${junit.report.dir}/Html_reports" />
		<junit printsummary="yes" haltonerror="no" haltonfailure="no" fork="yes">
			<formatter type="xml" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="${base.dir}/cobertura.ser" />
			<batchtest todir="${junit.report.dir}/Html_reports">
      			<fileset dir="${test.src.dir}">
					<include name="**/TestAll.java"/>
			    </fileset>
			</batchtest>
			<classpath>
				<pathelement location="${cobertura.home}/cobertura.jar" />
				<pathelement location="${test.src.dir}" />
				<pathelement location="${junit.classes.dir}" />
				<pathelement location="${instrumented.classes.dir}" />
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</junit>
		<junitreport todir="${junit.report.dir}/Html_reports">
			<fileset dir="${junit.report.dir}/Html_reports">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${junit.report.dir}/Html_reports" />
		</junitreport>
	</target>
	<target name="compileTest">			
		<javac destdir="${junit.classes.dir}" includes="**/*.*" debug="on" includeAntRuntime="false" target="1.5">
			<src path="${test.src.dir}" />
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${target.dir}" />
			</classpath>
		</javac>			
		<copy todir="${junit.classes.dir}">
			<fileset dir="${test.src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.ser" />
			</fileset>
		</copy>			
	</target>
	<target name="db_compile">

			<delete file="${db_lib.dir}/securityManager.jar"/>
			<copy todir="${db_lib.dir}">
				<fileset dir="${lib_dir}" >
					<include name ="*.jar"/>
				</fileset>
			</copy>
			<jar destfile="${db_lib.dir}/securityManager.jar" duplicate="preserve">
				<fileset dir="${tmp.smwar}/WEB-INF/classes">
					<include name="**/*.*"/>
					<exclude name ="dbutil.properties"/>
					<exclude name ="log4j.properties"/>
					<exclude name="**/ApplicationSecurityConfig.xml" />
				</fileset>			
			</jar>

			<javac destdir="${db_temp.dir}" srcdir="${db_src.dir}" includes="**/*">
				<classpath id="DbUnit_classpath2">
					<fileset dir="${web_lib.dir}">
						<include name="*.jar"/>
					</fileset>
						
					<fileset dir="${db_lib.dir}">
						<include name="*.jar"/>
					</fileset>	
					<!--pathelement path="${tmp.smwar}/WEB-INF/classes/"/ -->
				</classpath>
			</javac>
			
			<copy todir="${db_temp.dir}">
				<fileset dir="${db_unit.dir}/src" >
					<include name ="*.xml"/>
					<include name = "*.properties"/>
				</fileset>
				<fileset dir="${base.dir}">
					<include name="TestDataSet.xml"/>
				</fileset>
			</copy>
		</target>
</project>